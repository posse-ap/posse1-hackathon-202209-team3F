// ここから10個のテーマ配列
'use strict';

const information = [
  {
    theme: '① 仲間の居場所つくらずして自分の居場所なし',
    img: './assets/img/S__14983341.jpg',
    name: '3.0 塚越雄真',
    message: 
    `居場所を作るとは、弱みや欠点も受け入れ素で話し合える関係を築くことだと考えます。
    このような考えに至った経緯を私自身の経験に沿って話したいと思います。
    私は今までバスケや駅伝といったチームスポーツを経験してきました。
    その活動の中で、モチベーションは高いが上手くチームに溶け込むことができない仲間がいたため、相談に乗るといくつか本音が見えてきました。
    それは、、、
    ・バスケは好きだけど、ミスばっかりでチームに迷惑かけているから…
    ・内向的でコミュニケーションとるのが苦手だから…
    ・キツくなるとあきらめてしまう性格だから…
    といった自分にとってマイナスの条件をつけて自分の居場所を見失っていたのでした。
    つまり、「自分の中に弱い部分はあってはいけない」という心の状態を、「チームの中に弱い自分はいてはいけない」という居場所のない現実に投影していたのです。
    後日、その弱みをどうしたら強みにすることができるのか解決策を他のチームメイトで考え、普段の生活や練習でも実行していきました。
    その結果、仲間は弱みも受け入れてくれる環境に居場所を感じ、生き生きと一緒にバスケ人生を送ることができました。
    このように、仲間の居場所を作ること  =>  素で話し合える仲間の”一員”としての居場所、同じ目標を掲げた”一員”としての居場所　といった自分の居場所もそれに伴って確立していくと考えます。
    上記の経験は今後のチーム開発でも同様のことが言えると思います。
    自分の弱みを弱みと思わず、打ち明けることで受け入れてくれる仲間がPOSSEにはたくさんいます。
    そして、よこもくやたてもく、かださぽといった悩みや不安を受け入れてくれる先輩方や同期、信頼を置くことのできる”居場所”があります。
    したがって、仲間の居場所というのはすでにPOOSEにはたくさん作られていると思います。
    これからは人とつながる機会をより一層大事にし、安心して居られる居場所作りをハッカソンなどを通して作り上げていきたいです。`
  },
  {
    theme: '② ふりかえり主義',
    img: './assets/img/S__14983341.jpg',
    name: '2.0 藤吉彩花',
    message:
    `ついつい考え過ぎてしまう私が振り返りをすることで前向きになれたので、そのことについて話したいと思います。
    みなさんも、自分の前に壁が現れた時、何故自分は乗り越えられないのか、どう対処していけばいいのか考えると思います。その時に私は焦りや悔しい気持ちで、闇雲に進もうとし、しかし進んだ先には違う壁があり、自分なりに努力をしているつもりなのに上手くいかないというジレンマに陥りました。
    この時に振り返りが必要で、特に大事なのが言語化です。漠然とした問題点があると、肥大化して見えがちですが、きちんと文字に書き起こしてみると、物事を大きく捉え過ぎていたことに気づき、案外落ち着くことが多いのではないでしょうか。
    
    実際にチーム開発中にこの経験をしました。コードを複数試してもわからないためメンターさんに質問しよう、という時に、何がわからないのかがわからない状態にいたことに気がつきました。そこで一度立ち止まり言語化したことで、どこが足りなかったかが分かり、その時は自分で問題点を発見できて解決でき、自分でも気付くことができたという自信につながりました。一つ一つ自分の思い浮かべているやりたいことと、実際に起きていることの現象をきちんと言語化して、物事を正しく認識することの大事さを学びました。
    今回はコード面で例を話しましたが、人間関係やチームビルディング面でもこうした言語化の振り返りはとても有効だと考えます。
    また、こうした振り返りは物事の最後ではなく、次に進みたいと思う度に行うべきで、授業の復習をテスト前に一度にするときつくなるのと同じだと思います。
    まとめると、振り返りはネガティブ思考をポジティブ思考に変換するきっかけになり、
    なんで出来なかったんだろう…を言語化して原因見つけ、次からこうしようと前向きになれるので、問題を肥大化させる前に定期的に振り返りをしていくのが大事です。`
  },
  {
    theme: '② ふりかえり主義',
    img: './assets/img/S__14983341.jpg',
    name: '2.0 藤吉彩花',
    message:
    `ついつい考え過ぎてしまう私が振り返りをすることで前向きになれたので、そのことについて話したいと思います。
    みなさんも、自分の前に壁が現れた時、何故自分は乗り越えられないのか、どう対処していけばいいのか考えると思います。その時に私は焦りや悔しい気持ちで、闇雲に進もうとし、しかし進んだ先には違う壁があり、自分なりに努力をしているつもりなのに上手くいかないというジレンマに陥りました。
    この時に振り返りが必要で、特に大事なのが言語化です。漠然とした問題点があると、肥大化して見えがちですが、きちんと文字に書き起こしてみると、物事を大きく捉え過ぎていたことに気づき、案外落ち着くことが多いのではないでしょうか。
    
    実際にチーム開発中にこの経験をしました。コードを複数試してもわからないためメンターさんに質問しよう、という時に、何がわからないのかがわからない状態にいたことに気がつきました。そこで一度立ち止まり言語化したことで、どこが足りなかったかが分かり、その時は自分で問題点を発見できて解決でき、自分でも気付くことができたという自信につながりました。一つ一つ自分の思い浮かべているやりたいことと、実際に起きていることの現象をきちんと言語化して、物事を正しく認識することの大事さを学びました。
    今回はコード面で例を話しましたが、人間関係やチームビルディング面でもこうした言語化の振り返りはとても有効だと考えます。
    また、こうした振り返りは物事の最後ではなく、次に進みたいと思う度に行うべきで、授業の復習をテスト前に一度にするときつくなるのと同じだと思います。
    まとめると、振り返りはネガティブ思考をポジティブ思考に変換するきっかけになり、
    なんで出来なかったんだろう…を言語化して原因見つけ、次からこうしようと前向きになれるので、問題を肥大化させる前に定期的に振り返りをしていくのが大事です。`
  },
  {
    theme: '② ふりかえり主義',
    img: './assets/img/S__14983341.jpg',
    name: '2.0 藤吉彩花',
    message:
    `ついつい考え過ぎてしまう私が振り返りをすることで前向きになれたので、そのことについて話したいと思います。
    みなさんも、自分の前に壁が現れた時、何故自分は乗り越えられないのか、どう対処していけばいいのか考えると思います。その時に私は焦りや悔しい気持ちで、闇雲に進もうとし、しかし進んだ先には違う壁があり、自分なりに努力をしているつもりなのに上手くいかないというジレンマに陥りました。
    この時に振り返りが必要で、特に大事なのが言語化です。漠然とした問題点があると、肥大化して見えがちですが、きちんと文字に書き起こしてみると、物事を大きく捉え過ぎていたことに気づき、案外落ち着くことが多いのではないでしょうか。
    
    実際にチーム開発中にこの経験をしました。コードを複数試してもわからないためメンターさんに質問しよう、という時に、何がわからないのかがわからない状態にいたことに気がつきました。そこで一度立ち止まり言語化したことで、どこが足りなかったかが分かり、その時は自分で問題点を発見できて解決でき、自分でも気付くことができたという自信につながりました。一つ一つ自分の思い浮かべているやりたいことと、実際に起きていることの現象をきちんと言語化して、物事を正しく認識することの大事さを学びました。
    今回はコード面で例を話しましたが、人間関係やチームビルディング面でもこうした言語化の振り返りはとても有効だと考えます。
    また、こうした振り返りは物事の最後ではなく、次に進みたいと思う度に行うべきで、授業の復習をテスト前に一度にするときつくなるのと同じだと思います。
    まとめると、振り返りはネガティブ思考をポジティブ思考に変換するきっかけになり、
    なんで出来なかったんだろう…を言語化して原因見つけ、次からこうしようと前向きになれるので、問題を肥大化させる前に定期的に振り返りをしていくのが大事です。`
  },
  {
    theme: '② ふりかえり主義',
    img: './assets/img/S__14983341.jpg',
    name: '2.0 藤吉彩花',
    message:
    `ついつい考え過ぎてしまう私が振り返りをすることで前向きになれたので、そのことについて話したいと思います。
    みなさんも、自分の前に壁が現れた時、何故自分は乗り越えられないのか、どう対処していけばいいのか考えると思います。その時に私は焦りや悔しい気持ちで、闇雲に進もうとし、しかし進んだ先には違う壁があり、自分なりに努力をしているつもりなのに上手くいかないというジレンマに陥りました。
    この時に振り返りが必要で、特に大事なのが言語化です。漠然とした問題点があると、肥大化して見えがちですが、きちんと文字に書き起こしてみると、物事を大きく捉え過ぎていたことに気づき、案外落ち着くことが多いのではないでしょうか。
    
    実際にチーム開発中にこの経験をしました。コードを複数試してもわからないためメンターさんに質問しよう、という時に、何がわからないのかがわからない状態にいたことに気がつきました。そこで一度立ち止まり言語化したことで、どこが足りなかったかが分かり、その時は自分で問題点を発見できて解決でき、自分でも気付くことができたという自信につながりました。一つ一つ自分の思い浮かべているやりたいことと、実際に起きていることの現象をきちんと言語化して、物事を正しく認識することの大事さを学びました。
    今回はコード面で例を話しましたが、人間関係やチームビルディング面でもこうした言語化の振り返りはとても有効だと考えます。
    また、こうした振り返りは物事の最後ではなく、次に進みたいと思う度に行うべきで、授業の復習をテスト前に一度にするときつくなるのと同じだと思います。
    まとめると、振り返りはネガティブ思考をポジティブ思考に変換するきっかけになり、
    なんで出来なかったんだろう…を言語化して原因見つけ、次からこうしようと前向きになれるので、問題を肥大化させる前に定期的に振り返りをしていくのが大事です。`
  },
  {
    theme: '② ふりかえり主義',
    img: './assets/img/S__14983341.jpg',
    name: '2.0 藤吉彩花',
    message:
    `ついつい考え過ぎてしまう私が振り返りをすることで前向きになれたので、そのことについて話したいと思います。
    みなさんも、自分の前に壁が現れた時、何故自分は乗り越えられないのか、どう対処していけばいいのか考えると思います。その時に私は焦りや悔しい気持ちで、闇雲に進もうとし、しかし進んだ先には違う壁があり、自分なりに努力をしているつもりなのに上手くいかないというジレンマに陥りました。
    この時に振り返りが必要で、特に大事なのが言語化です。漠然とした問題点があると、肥大化して見えがちですが、きちんと文字に書き起こしてみると、物事を大きく捉え過ぎていたことに気づき、案外落ち着くことが多いのではないでしょうか。
    
    実際にチーム開発中にこの経験をしました。コードを複数試してもわからないためメンターさんに質問しよう、という時に、何がわからないのかがわからない状態にいたことに気がつきました。そこで一度立ち止まり言語化したことで、どこが足りなかったかが分かり、その時は自分で問題点を発見できて解決でき、自分でも気付くことができたという自信につながりました。一つ一つ自分の思い浮かべているやりたいことと、実際に起きていることの現象をきちんと言語化して、物事を正しく認識することの大事さを学びました。
    今回はコード面で例を話しましたが、人間関係やチームビルディング面でもこうした言語化の振り返りはとても有効だと考えます。
    また、こうした振り返りは物事の最後ではなく、次に進みたいと思う度に行うべきで、授業の復習をテスト前に一度にするときつくなるのと同じだと思います。
    まとめると、振り返りはネガティブ思考をポジティブ思考に変換するきっかけになり、
    なんで出来なかったんだろう…を言語化して原因見つけ、次からこうしようと前向きになれるので、問題を肥大化させる前に定期的に振り返りをしていくのが大事です。`
  },
  {
    theme: '② ふりかえり主義',
    img: './assets/img/S__14983341.jpg',
    name: '2.0 藤吉彩花',
    message:
    `ついつい考え過ぎてしまう私が振り返りをすることで前向きになれたので、そのことについて話したいと思います。
    みなさんも、自分の前に壁が現れた時、何故自分は乗り越えられないのか、どう対処していけばいいのか考えると思います。その時に私は焦りや悔しい気持ちで、闇雲に進もうとし、しかし進んだ先には違う壁があり、自分なりに努力をしているつもりなのに上手くいかないというジレンマに陥りました。
    この時に振り返りが必要で、特に大事なのが言語化です。漠然とした問題点があると、肥大化して見えがちですが、きちんと文字に書き起こしてみると、物事を大きく捉え過ぎていたことに気づき、案外落ち着くことが多いのではないでしょうか。
    
    実際にチーム開発中にこの経験をしました。コードを複数試してもわからないためメンターさんに質問しよう、という時に、何がわからないのかがわからない状態にいたことに気がつきました。そこで一度立ち止まり言語化したことで、どこが足りなかったかが分かり、その時は自分で問題点を発見できて解決でき、自分でも気付くことができたという自信につながりました。一つ一つ自分の思い浮かべているやりたいことと、実際に起きていることの現象をきちんと言語化して、物事を正しく認識することの大事さを学びました。
    今回はコード面で例を話しましたが、人間関係やチームビルディング面でもこうした言語化の振り返りはとても有効だと考えます。
    また、こうした振り返りは物事の最後ではなく、次に進みたいと思う度に行うべきで、授業の復習をテスト前に一度にするときつくなるのと同じだと思います。
    まとめると、振り返りはネガティブ思考をポジティブ思考に変換するきっかけになり、
    なんで出来なかったんだろう…を言語化して原因見つけ、次からこうしようと前向きになれるので、問題を肥大化させる前に定期的に振り返りをしていくのが大事です。`
  },
  {
    theme: '② ふりかえり主義',
    img: './assets/img/S__14983341.jpg',
    name: '2.0 藤吉彩花',
    message:
    `ついつい考え過ぎてしまう私が振り返りをすることで前向きになれたので、そのことについて話したいと思います。
    みなさんも、自分の前に壁が現れた時、何故自分は乗り越えられないのか、どう対処していけばいいのか考えると思います。その時に私は焦りや悔しい気持ちで、闇雲に進もうとし、しかし進んだ先には違う壁があり、自分なりに努力をしているつもりなのに上手くいかないというジレンマに陥りました。
    この時に振り返りが必要で、特に大事なのが言語化です。漠然とした問題点があると、肥大化して見えがちですが、きちんと文字に書き起こしてみると、物事を大きく捉え過ぎていたことに気づき、案外落ち着くことが多いのではないでしょうか。
    
    実際にチーム開発中にこの経験をしました。コードを複数試してもわからないためメンターさんに質問しよう、という時に、何がわからないのかがわからない状態にいたことに気がつきました。そこで一度立ち止まり言語化したことで、どこが足りなかったかが分かり、その時は自分で問題点を発見できて解決でき、自分でも気付くことができたという自信につながりました。一つ一つ自分の思い浮かべているやりたいことと、実際に起きていることの現象をきちんと言語化して、物事を正しく認識することの大事さを学びました。
    今回はコード面で例を話しましたが、人間関係やチームビルディング面でもこうした言語化の振り返りはとても有効だと考えます。
    また、こうした振り返りは物事の最後ではなく、次に進みたいと思う度に行うべきで、授業の復習をテスト前に一度にするときつくなるのと同じだと思います。
    まとめると、振り返りはネガティブ思考をポジティブ思考に変換するきっかけになり、
    なんで出来なかったんだろう…を言語化して原因見つけ、次からこうしようと前向きになれるので、問題を肥大化させる前に定期的に振り返りをしていくのが大事です。`
  },
  {
    theme: '② ふりかえり主義',
    img: './assets/img/S__14983341.jpg',
    name: '2.0 藤吉彩花',
    message:
    `ついつい考え過ぎてしまう私が振り返りをすることで前向きになれたので、そのことについて話したいと思います。
    みなさんも、自分の前に壁が現れた時、何故自分は乗り越えられないのか、どう対処していけばいいのか考えると思います。その時に私は焦りや悔しい気持ちで、闇雲に進もうとし、しかし進んだ先には違う壁があり、自分なりに努力をしているつもりなのに上手くいかないというジレンマに陥りました。
    この時に振り返りが必要で、特に大事なのが言語化です。漠然とした問題点があると、肥大化して見えがちですが、きちんと文字に書き起こしてみると、物事を大きく捉え過ぎていたことに気づき、案外落ち着くことが多いのではないでしょうか。
    
    実際にチーム開発中にこの経験をしました。コードを複数試してもわからないためメンターさんに質問しよう、という時に、何がわからないのかがわからない状態にいたことに気がつきました。そこで一度立ち止まり言語化したことで、どこが足りなかったかが分かり、その時は自分で問題点を発見できて解決でき、自分でも気付くことができたという自信につながりました。一つ一つ自分の思い浮かべているやりたいことと、実際に起きていることの現象をきちんと言語化して、物事を正しく認識することの大事さを学びました。
    今回はコード面で例を話しましたが、人間関係やチームビルディング面でもこうした言語化の振り返りはとても有効だと考えます。
    また、こうした振り返りは物事の最後ではなく、次に進みたいと思う度に行うべきで、授業の復習をテスト前に一度にするときつくなるのと同じだと思います。
    まとめると、振り返りはネガティブ思考をポジティブ思考に変換するきっかけになり、
    なんで出来なかったんだろう…を言語化して原因見つけ、次からこうしようと前向きになれるので、問題を肥大化させる前に定期的に振り返りをしていくのが大事です。`
  },
  {
    theme: '② ふりかえり主義',
    img: './assets/img/S__14983341.jpg',
    name: '2.0 藤吉彩花',
    message:
    `ついつい考え過ぎてしまう私が振り返りをすることで前向きになれたので、そのことについて話したいと思います。
    みなさんも、自分の前に壁が現れた時、何故自分は乗り越えられないのか、どう対処していけばいいのか考えると思います。その時に私は焦りや悔しい気持ちで、闇雲に進もうとし、しかし進んだ先には違う壁があり、自分なりに努力をしているつもりなのに上手くいかないというジレンマに陥りました。
    この時に振り返りが必要で、特に大事なのが言語化です。漠然とした問題点があると、肥大化して見えがちですが、きちんと文字に書き起こしてみると、物事を大きく捉え過ぎていたことに気づき、案外落ち着くことが多いのではないでしょうか。
    
    実際にチーム開発中にこの経験をしました。コードを複数試してもわからないためメンターさんに質問しよう、という時に、何がわからないのかがわからない状態にいたことに気がつきました。そこで一度立ち止まり言語化したことで、どこが足りなかったかが分かり、その時は自分で問題点を発見できて解決でき、自分でも気付くことができたという自信につながりました。一つ一つ自分の思い浮かべているやりたいことと、実際に起きていることの現象をきちんと言語化して、物事を正しく認識することの大事さを学びました。
    今回はコード面で例を話しましたが、人間関係やチームビルディング面でもこうした言語化の振り返りはとても有効だと考えます。
    また、こうした振り返りは物事の最後ではなく、次に進みたいと思う度に行うべきで、授業の復習をテスト前に一度にするときつくなるのと同じだと思います。
    まとめると、振り返りはネガティブ思考をポジティブ思考に変換するきっかけになり、
    なんで出来なかったんだろう…を言語化して原因見つけ、次からこうしようと前向きになれるので、問題を肥大化させる前に定期的に振り返りをしていくのが大事です。`
  },
  
  
];

console.log(information[1].message)





const speech = document.getElementById('mainContent')


for (let i = 0; i < information.length; i++) {
  let speechHTML = `<div class="main-content">`
+   `<div class="main-theme" id="mainTheme"  data-theme = "${i}"><p>${information[i].theme}<span>▼</span></p></div>`  
+  `</div>`
+  `<div class="main-speech-inner" id="mainSpeech${i}">`
+    `<div class="main-speech-box">`
+      `<div class="main-speech-people">`
+        `<div class="main-speech-img"><img src="${information[i].img}" alt="face"></div>`
+        `<p class="main-speech-name">${information[i].name}</p>`
+      `</div>`
+      `<div class="main-speech-wrapper">`
+        `<div class="main-speech-comment">`
+                `<p>${information[i].message}</p>`
+        `</div>`
+        `<button class="main-good-btn">いいね</button>`
+      `</div>`
+    `</div>`    
+  `</div>`;
speech.insertAdjacentHTML("beforeend",speechHTML)

}


const main = document.querySelectorAll('.main-theme');

main.forEach(mainitem =>{
  
  mainitem.addEventListener('click', ()=>{
    let selectedTheme = mainitem.getAttribute('data-theme');
    console.log(selectedTheme)
    let speechbox = document.getElementById(`mainSpeech${selectedTheme}`);
    speechbox.style.display = 'block';

  });

}
);
